@article{10.1145/3371038,
  author     = {Vieira, Marcos A. M. and Castanho, Matheus S. and Pac\'{\i}fico, Racyus D. G. and Santos, Elerson R. S. and J\'{u}nior, Eduardo P. M. C\^{a}mara and Vieira, Luiz F. M.},
  title      = {Fast Packet Processing with EBPF and XDP: Concepts, Code, Challenges, and Applications},
  year       = {2020},
  issue_date = {January 2021},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {53},
  number     = {1},
  issn       = {0360-0300},
  url        = {https://doi.org/10.1145/3371038},
  doi        = {10.1145/3371038},
  abstract   = {Extended Berkeley Packet Filter (eBPF) is an instruction set and an execution environment inside the Linux kernel. It enables modification, interaction, and kernel programmability at runtime. eBPF can be used to program the eXpress Data Path (XDP), a kernel network layer that processes packets closer to the NIC for fast packet processing. Developers can write programs in C or P4 languages and then compile to eBPF instructions, which can be processed by the kernel or by programmable devices (e.g., SmartNICs). Since its introduction in 2014, eBPF has been rapidly adopted by major companies such as Facebook, Cloudflare, and Netronome. Use cases include network monitoring, network traffic manipulation, load balancing, and system profiling. This work aims to present eBPF to an inexpert audience, covering the main theoretical and fundamental aspects of eBPF and XDP, as well as introducing the reader to simple examples to give insight into the general operation and use of both technologies.},
  journal    = {ACM Comput. Surv.},
  month      = {feb},
  articleno  = {16},
  numpages   = {36},
  keywords   = {Computer networking, network functions, packet processing}
}

@misc{rfc768,
  series       = {Request for Comments},
  number       = 768,
  howpublished = {RFC 768},
  publisher    = {RFC Editor},
  doi          = {10.17487/RFC0768},
  url          = {https://www.rfc-editor.org/info/rfc768},
  author       = {},
  title        = {{User Datagram Protocol}},
  pagetotal    = 3,
  year         = 1980,
  month        = aug,
  abstract     = {}
}

@article{45646,
  title   = {BBR: Congestion-Based Congestion Control},
  author  = {Neal Cardwell and Yuchung Cheng and C. Stephen Gunn and Soheil Hassas Yeganeh and Van Jacobson},
  year    = {2016},
  url     = {http://queue.acm.org/detail.cfm?id=3022184},
  journal = {ACM Queue},
  pages   = {20 - 53},
  volume  = {14, September-October}
}

@techreport{ietf-quic-http-34,
  number      = {draft-ietf-quic-http-34},
  type        = {Internet-Draft},
  institution = {Internet Engineering Task Force},
  publisher   = {Internet Engineering Task Force},
  note        = {Work in Progress},
  url         = {https://datatracker.ietf.org/doc/html/draft-ietf-quic-http-34},
  author      = {Mike Bishop},
  title       = {{Hypertext Transfer Protocol Version 3 (HTTP/3)}},
  pagetotal   = 75,
  year        = 2021,
  month       = feb,
  day         = 2,
  abstract    = {The QUIC transport protocol has several features that are desirable in a transport for HTTP, such as stream multiplexing, per-stream flow control, and low-latency connection establishment. This document describes a mapping of HTTP semantics over QUIC. This document also identifies HTTP/2 features that are subsumed by QUIC, and describes how HTTP/2 extensions can be ported to HTTP/3. DO NOT DEPLOY THIS VERSION OF HTTP DO NOT DEPLOY THIS VERSION OF HTTP/3 UNTIL IT IS IN AN RFC. This version is still a work in progress. For trial deployments, please use earlier versions. Note to Readers Discussion of this draft takes place on the QUIC working group mailing list (quic@ietf.org), which is archived at https://mailarchive.ietf.org/arch/search/?email\_list=quic. Working Group information can be found at https://github.com/quicwg; source code and issues list for this draft can be found at https://github.com/quicwg/base-drafts/labels/-http.}
}
